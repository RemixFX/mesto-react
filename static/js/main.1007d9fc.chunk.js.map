{"version":3,"sources":["images/logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","utils/api.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/ImagePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/FormValidator.js","utils/utils.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","CurrentUserContext","React","createContext","Card","props","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","link","name","onClick","onCardClick","type","onCardDelete","onCardLike","length","Main","avatar","onEditAvatar","onEditProfile","about","onAddPlace","TransitionGroup","component","cards","map","CSSTransition","classNames","timeout","Footer","api","options","this","_url","url","_headers","headers","res","ok","json","Promise","reject","status","all","getUserData","getInitialCards","fetch","then","_checkResponse","userdata","method","body","JSON","stringify","data","cardId","authorization","PopupWithForm","isOpen","onPopupClick","onClose","title","noValidate","onSubmit","onSubmitForm","children","class","buttonText","EditProfilePopup","useState","setName","description","setDescription","useEffect","evt","preventDefault","onUpdateUser","autoComplete","id","required","minLength","maxLength","value","onChange","target","ImagePopup","EditAvatarPopups","avatarRef","useRef","current","onUpdateAvatar","placeholder","ref","AddPlacePopup","setLink","FormValidator","settings","formElement","_formElement","_inputSelector","inputSelector","_submitButtonSelector","submitButtonSelector","_inactiveButtonClass","inactiveButtonClass","_inputErrorClass","inputErrorClass","_errorClass","errorClass","_inputList","Array","from","querySelectorAll","_buttonElement","querySelector","inputElement","_getErrorElement","classList","add","_errorElement","textContent","validationMessage","remove","validity","valid","_hideInputError","_showInputError","_checkFormValidity","setAttribute","removeAttribute","_toggleButtonState","forEach","addEventListener","_checkInputValidity","_setEventListeners","App","setCards","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmDeletePopupOpen","setIsConfirmDeletePopupOpen","selectedCard","setSelectedCard","forDeleteCard","setForDeleteCard","setCurrentUser","closeAllPopups","handlePopupClick","contains","catch","err","console","log","document","forms","profileEdit","enableValidation","cardAdd","avatarEdit","resetValidation","handleEsc","key","removeEventListener","Provider","changeLikeCardStatus","newCard","state","c","userInfo","patchUserData","cardData","uploadNewCard","EditAvatarPopup","patchUserAvatar","deleteCard","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1007d9fc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.bbe2a6ea.svg\";","import logo from '../images/logo.svg';\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <img className=\"header__logo\" src={logo} alt=\"логотип место, Россия\" />\n    </header>\n  )\n};\n\nexport default Header;\n","import React from 'react';\nexport const CurrentUserContext = React.createContext();\n","import React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Card(props) {\n  const currentUser = React.useContext(CurrentUserContext);\n\n  // отображать ли кнопку удаления карточки?\n  const isOwn = props.card.owner._id === currentUser._id;\n  const cardDeleteButtonClassName = (\n    `element__delete-button ${isOwn ? 'element__delete-button' : 'element__delete-button_disabled'}`\n  );\n\n  // отображать ли свой лайк на карточке?\n  const isLiked = props.card.likes.some(i => i._id === currentUser._id);\n  const cardLikeButtonClassName = (\n    `element__like-button ${isLiked ? 'element__like-button_type_active' : 'element__like-button'}`\n  );\n\n  function handleClick() {\n    props.onCardClick(props.card);\n  }\n\n  function handleLikeClick() {\n    props.onCardLike(props.card);\n  }\n\n  function handleDeleteClick() {\n    props.onCardDelete(props.card)\n  }\n\n  return (\n        <article className=\"element\">\n          <img className=\"element__image\" src={props.card.link} alt={props.card.name}\n            onClick={handleClick} />\n          <button className={cardDeleteButtonClassName} type=\"button\"\n            onClick={handleDeleteClick}></button>\n          <div className=\"element__description\">\n            <h2 className=\"element__name\">{props.card.name}</h2>\n            <div className=\"element__like-container\">\n              <button className={cardLikeButtonClassName} type=\"button\"\n                onClick={handleLikeClick}></button>\n              <span className=\"element__like-value\">{props.card.likes.length}</span>\n            </div>\n          </div>\n        </article>\n  )\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card.js'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nfunction Main(props) {\n  const currentUser = React.useContext(CurrentUserContext);\n  return (\n    <main className=\"content\">\n      <section className=\"profile\">\n        <div className=\"profile__info\">\n          <img className=\"profile__avatar\" src={currentUser.avatar} alt=\"\" />\n          <button className=\"profile__avatar-button\" type=\"button\"\n            onClick={props.onEditAvatar}></button>\n          <div className=\"profile__info-block\">\n            <h1 className=\"profile__name\">{currentUser.name}</h1>\n            <button className=\"profile__edit-button\" type=\"button\"\n              onClick={props.onEditProfile}></button>\n            <p className=\"profile__job\">{currentUser.about}</p>\n          </div>\n        </div>\n        <button className=\"profile__add-button\" type=\"button\"\n          onClick={props.onAddPlace}></button>\n      </section>\n      <section className=\"elements\">\n        <TransitionGroup component={null}>\n          {props.cards.map((card) =>\n            <CSSTransition  classNames=\"element-animated\" timeout={700} key={card._id} >\n              <Card card={card} onCardClick={props.onCardClick}\n                onCardLike={props.onCardLike} onCardDelete={props.onCardDelete} />\n            </CSSTransition >\n          )}\n        </TransitionGroup>\n      </section>\n    </main>\n  )\n}\n\nexport default Main;\n","function Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyright\">&copy; 2021 Mesto Russia</p>\n    </footer>\n  )\n}\n\nexport default Footer;\n","class Api {\n  constructor(options) {\n      this._url = options.url;\n      this._headers = options.headers;\n  }\n\n  _checkResponse(res) {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getPageInfo() {\n    return Promise.all([this.getUserData(), this.getInitialCards()]);\n  }\n\n  getUserData() {\n    return fetch(`${this._url}users/me`, {\n      headers: this._headers\n    })\n    .then(this._checkResponse);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._url}cards`, {\n      headers: this._headers\n    })\n    .then(this._checkResponse);\n  }\n\n  patchUserData(userdata) {\n    return fetch(`${this._url}users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: userdata.name,\n        about: userdata.about\n      })\n    })\n    .then(this._checkResponse);\n  }\n\n  uploadNewCard(data) {\n    return fetch(`${this._url}cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    })\n    .then(this._checkResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    })\n    .then(this._checkResponse);\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    return fetch(`${this._url}cards/likes/${cardId}`, {\n      method: !isLiked ? \"PUT\" : \"DELETE\",\n      headers: this._headers\n    })\n    .then(this._checkResponse);\n  }\n\n  patchUserAvatar(data) {\n    return fetch(`${this._url}users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    })\n    .then(this._checkResponse);\n  }\n\n}\n\nconst api = new Api({\n  url: \"https://mesto.nomoreparties.co/v1/cohort-29/\",\n  headers: {\n    authorization: \"0fe39d88-814c-4d9c-a2d1-36a2026603cf\",\n    \"Content-type\": \"application/json\"\n  }\n});\n\nexport default api;\n","function PopupWithForm(props) {\n  return (\n    <div className={`popup popup_type_${props.name} ${props.isOpen}`}\n      onClick={props.onPopupClick}>\n      <div className=\"popup__container\">\n        <button className=\"popup__close-button\" type=\"button\"\n          onClick={props.onClose}>\n        </button>\n        <h3 className=\"popup__heading\">{props.title}</h3>\n        <form noValidate name={props.name} className=\"form\" onSubmit={props.onSubmitForm}>\n          {props.children}\n          <button className={`form__submit-button ${props.class}`}\n            type=\"submit\">{props.buttonText}</button>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default PopupWithForm;\n","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup(props) {\n  const currentUser = React.useContext(CurrentUserContext);\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n\n  function handleChangeName(evt) {\n    setName(evt.target.value)\n  }\n  function handleChangeDescription(evt) {\n    setDescription(evt.target.value)\n  }\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser, props.isOpen]);\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    props.onUpdateUser({\n      name,\n      about: description,\n    });\n  }\n\n  return (\n    <PopupWithForm title=\"Редактировать профиль\" name={props.name} buttonText='Сохранить'\n      isOpen={props.isOpen ? 'popup_opened' : ''} onSubmitForm={handleSubmit}\n      onClose={props.onClose} onPopupClick={props.onPopupClick}>\n      <fieldset className=\"form__field\">\n        <input type=\"text\" autoComplete=\"off\" name=\"name\" id=\"name\"\n          required minLength=\"2\" maxLength=\"40\" className=\"form__input form__input_type_name\"\n          value={name} onChange={handleChangeName} />\n        <span id=\"name-error\" className=\"form__error\"></span>\n        <input type=\"text\" autoComplete=\"off\" name=\"about\" id=\"about\"\n          required minLength=\"2\" maxLength=\"200\" className=\"form__input form__input_type_job\"\n          value={description} onChange={handleChangeDescription} />\n        <span id=\"about-error\" className=\"form__error\"></span>\n      </fieldset>\n    </PopupWithForm>\n  )\n}\n\nexport default EditProfilePopup;\n","function ImagePopup(props) {\n  return (\n    <div className={`popup popup-card ${props.isOpen}`} onClick={props.onPopupClick}>\n      <div className=\"popup-card__container\">\n        <div className=\"popup-card__image-container\">\n          <img className=\"popup-card__image\" src={props.card.link} alt={props.card.name} />\n          <button className=\"popup__close-button popup__close-button_type_image-popup\"\n            type=\"button\" onClick={props.onClose}>\n          </button>\n        </div>\n        <span className=\"popup-card__image-name\">{props.card.name}</span>\n      </div>\n    </div>\n  )\n}\n\nexport default ImagePopup;\n","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction EditAvatarPopups(props) {\n  const avatarRef = React.useRef();\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    props.onUpdateAvatar({\n      avatar: avatarRef.current.value\n    });\n  }\n\n  React.useEffect(() => {\n    avatarRef.current.value = '';\n  }, [props.isOpen]);\n\n  return (\n    <PopupWithForm title=\"Обновить аватар\" name={props.name} buttonText='Сохранить'\n      isOpen={props.isOpen ? 'popup_opened' : ''} onSubmitForm={handleSubmit}\n      onClose={props.onClose} onPopupClick={props.onPopupClick}>\n      <fieldset className=\"form__field\">\n        <input type=\"url\" autoComplete=\"off\" name=\"avatar\" id=\"avatar\" placeholder=\"Ссылка на картинку\"\n          required className=\"form__input form__input_type_link\"\n          ref={avatarRef} />\n        <span id=\"avatar-error\" className=\"form__error\"></span>\n      </fieldset>\n    </PopupWithForm>\n  )\n}\n\nexport default EditAvatarPopups;\n","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction AddPlacePopup(props) {\n  const [name, setName] = React.useState('');\n  const [link, setLink] = React.useState('');\n\n  function handleChangeName(evt) {\n    setName(evt.target.value)\n  }\n  function handleChangeLink(evt) {\n    setLink(evt.target.value)\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    props.onAddPlace({name, link});\n  }\n\n  React.useEffect(() => {\n    setName('');\n    setLink('');\n  }, [props.isOpen]);\n\n  return (\n    <PopupWithForm title=\"Новое место\" name={props.name} buttonText='Создать'\n      isOpen={props.isOpen ? 'popup_opened' : ''} onSubmitForm={handleSubmit}\n      onClose={props.onClose} onPopupClick={props.onPopupClick}>\n      <fieldset className=\"form__field\">\n        <input type=\"text\" autoComplete=\"off\" name=\"name\" id=\"title\" placeholder=\"Название\"\n          required minLength=\"2\" maxLength=\"30\" className=\"form__input form__input_type_name-card\"\n          value={name} onChange={handleChangeName} />\n        <span id=\"title-error\" className=\"form__error\"></span>\n        <input type=\"url\" autoComplete=\"off\" name=\"link\" id=\"link\" placeholder=\"Ссылка на картинку\"\n          required className=\"form__input form__input_type_link\"\n          value={link} onChange={handleChangeLink} />\n        <span id=\"link-error\" className=\"form__error\"></span>\n      </fieldset>\n    </PopupWithForm>\n  )\n}\n\nexport default AddPlacePopup;\n","export default class FormValidator {\n  constructor(settings, formElement) {\n    this._formElement = formElement;\n    this._inputSelector = settings.inputSelector;\n    this._submitButtonSelector = settings.submitButtonSelector;\n    this._inactiveButtonClass = settings.inactiveButtonClass;\n    this._inputErrorClass = settings.inputErrorClass;\n    this._errorClass = settings.errorClass;\n    this._inputList = Array.from(this._formElement.querySelectorAll(this._inputSelector));\n    this._buttonElement = this._formElement.querySelector(this._submitButtonSelector);\n  }\n\n  //объявляем функцию показа ошибки\n\n  _showInputError(inputElement) {\n    this._getErrorElement(inputElement);\n    inputElement.classList.add(this._inputErrorClass);\n    this._errorElement.textContent = inputElement.validationMessage;\n    this._errorElement.classList.add(this._errorClass);\n  }\n\n  //объявляем функцию скрытия ошибки\n\n  _hideInputError(inputElement) {\n    this._getErrorElement(inputElement);\n    inputElement.classList.remove(this._inputErrorClass);\n    this._errorElement.classList.remove(this._errorClass);\n  }\n\n  // ищем 1 раз _errorElement\n\n  _getErrorElement(inputElement) {\n    this._errorElement = this._formElement.querySelector(`#${inputElement.id}-error`);\n  }\n\n  //объявляем функцию, которая проверяет валидно ли поле формы и вызывает фукнцию показа\n  //или скрытия ошибки\n\n  _checkInputValidity (inputElement) {\n    if (!inputElement.validity.valid) {\n      this._showInputError(inputElement, this._inputErrorClass, this._errorClass);\n    } else {\n      this._hideInputError(inputElement, this._inputErrorClass, this._errorClass);\n    };\n  };\n\n  //объявляем функцию для кнопки submit, которая проверяет валидны ли ВСЕ поля в этой форме\n\n  _checkFormValidity () {\n    return this._inputList.some(inputElement => {\n      return !inputElement.validity.valid;\n    });\n  };\n\n  //объявляем функцию для кнопки submit, которая включает или выключает кнопку\n  //в зависимости от того, валидны ли все поля в этой форме\n\n  _toggleButtonState () {\n    if (this._checkFormValidity(this._inputList)) { // без this._inputList не работает\n      this._buttonElement.classList.add(this._inactiveButtonClass);\n      this._buttonElement.setAttribute('disabled', 'good');\n    } else {\n      this._buttonElement.classList.remove(this._inactiveButtonClass);\n      this._buttonElement.removeAttribute('disabled');\n    }\n  };\n\n  //объявляем функцию принудительной очистки ошибок в инпутах\n\n  resetValidation() {\n    this._toggleButtonState();\n\n    this._inputList.forEach((inputElement) => {\n      this._hideInputError(inputElement);\n    });\n  }\n\n  //объявляем функцию навешивания слушателей\n\n  _setEventListeners () {\n    this._inputList.forEach((inputElement) => {\n      inputElement.addEventListener('input', () => {\n        this._checkInputValidity(inputElement);\n        this._toggleButtonState();\n      });\n    });\n    this._toggleButtonState();\n  }\n\n  //функция включения валидации\n\n  enableValidation () {\n    this._setEventListeners();\n  }\n\n}\n","export const settings = {\n  inputSelector: '.form__input',\n  submitButtonSelector: '.form__submit-button',\n  inactiveButtonClass: 'form__submit-button_disabled',\n  inputErrorClass: 'form__input_type_error',\n  errorClass: 'form__error_visible',\n};\n","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport api from '../utils/api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport PopupWithForm from './PopupWithForm';\nimport EditProfilePopup from './EditProfilePopup';\nimport ImagePopup from './ImagePopup';\nimport EditAvatarPopups from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport FormValidator from './FormValidator';\nimport { settings } from '../utils/utils';\n\n\nfunction App() {\n  const [cards, setCards] = React.useState([]);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isConfirmDeletePopupOpen, setIsConfirmDeletePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({ name: '', link: '' });\n  const [forDeleteCard, setForDeleteCard] = React.useState([])\n\n  // Получение контекста текущего профиля\n  const [currentUser, setCurrentUser] = React.useState({\n    avatar: '',\n    name: '',\n    about: '',\n    _id: ''\n  })\n\n  // Получение данных профиля с сервера\n  React.useEffect(() => {\n    api.getUserData().then(res => setCurrentUser(res))\n      .catch((err) => console.log(err))\n  }, []);\n\n  // Получение карточек с сервера\n  React.useEffect(() => {\n    api.getInitialCards().then((res) => {\n      setCards(res)\n    })\n      .catch(err => console.log(err))\n  }, []);\n\n  // Включение валидации для формы редактирования текстовых полей профиля\n  React.useEffect(() => {\n    const profileEditValidator = new FormValidator(settings, document.forms.profileEdit);\n    profileEditValidator.enableValidation()\n  }, []);\n\n  // Включение валидации для формы добавления карточки\n  React.useEffect(() => {\n    const cardAddValidator = new FormValidator(settings, document.forms.cardAdd);\n    cardAddValidator.enableValidation()\n  }, []);\n\n  // Включение валидации для формы редактирования аватара профиля\n  React.useEffect(() => {\n    const avatarEditValidator = new FormValidator(settings, document.forms.avatarEdit);\n    avatarEditValidator.enableValidation()\n  }, []);\n\n  // Очистка ошибок валидации для формы редактирования текстовых полей профиля\n  React.useEffect(() => {\n    const profileEditValidator = new FormValidator(settings, document.forms.profileEdit);\n    profileEditValidator.resetValidation()\n  }, [isEditProfilePopupOpen]);\n\n  // Очистка ошибок валидации для формы добавления карточки\n  React.useEffect(() => {\n    const cardAddValidator = new FormValidator(settings, document.forms.cardAdd);\n    cardAddValidator.resetValidation()\n  }, [isAddPlacePopupOpen]);\n\n  // Очистка ошибок валидации для формы редактирования аватара профиля\n  React.useEffect(() => {\n    const avatarEditValidator = new FormValidator(settings, document.forms.avatarEdit);\n    avatarEditValidator.resetValidation()\n  }, [isEditAvatarPopupOpen]);\n\n  // Постановка лайка\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, isLiked).then((newCard) => {\n      setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n    })\n      .catch(err => console.log(err));\n  }\n\n  // Добавление удаляемой карточки в стейт и открытие попапа подтверждения удаления\n  function handleConfirmDeleteCardPopupOpen(card) {\n    setForDeleteCard(card);\n    setIsConfirmDeletePopupOpen(true)\n  }\n\n  // Удаление карточки\n  function handleCardDelete(evt) {\n    evt.preventDefault();\n\n    api.deleteCard(forDeleteCard._id).then(() => {\n      setCards((state) => state.filter((c) => c._id !== forDeleteCard._id))\n    })\n      .catch(err => console.log(err))\n      closeAllPopups();\n  }\n\n  // Единая функция закрытия попапов\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard({ name: '', link: '' });\n    setIsConfirmDeletePopupOpen(false)\n  }\n\n  // Закрытие попапов по клавише Escape\n  React.useEffect(() => {\n    if (isEditProfilePopupOpen || isAddPlacePopupOpen || isEditAvatarPopupOpen\n      || isConfirmDeletePopupOpen === true || selectedCard.link) {\n      function handleEsc(evt) {\n        if (evt.key === 'Escape') {\n          closeAllPopups()\n        }\n      }\n\n      document.addEventListener(\"keydown\", handleEsc)\n\n      return () => {\n        document.removeEventListener(\"keydown\", handleEsc)\n      }\n    }\n  }, [isEditProfilePopupOpen, isAddPlacePopupOpen, isEditAvatarPopupOpen,\n    isConfirmDeletePopupOpen, selectedCard.link])\n\n  // Закрытие попапа по клике на область\n  function handlePopupClick(evt) {\n    if (evt.target.classList.contains(\"popup\")) {\n      closeAllPopups()\n    }\n  }\n\n  // Открытие попапа с картинкой\n  function handleCardClick(card) {\n    setSelectedCard(card)\n  }\n\n  // Обновление текстовых полей профиля\n  function handleUpdateUser(userInfo) {\n    api.patchUserData(userInfo).then(res => setCurrentUser(res))\n      .catch((err) => console.log(err));\n    closeAllPopups()\n  }\n\n  // Обновление аватара профиля\n  function handleUpdateAvatar(avatar) {\n    api.patchUserAvatar(avatar).then(res => setCurrentUser(res))\n      .catch((err) => console.log(err));\n    closeAllPopups()\n  }\n\n  // Добавление новой карточки\n  function handleAddPlaceSubmit(cardData) {\n    api.uploadNewCard(cardData).then(newCard => setCards([newCard, ...cards]))\n      .catch((err) => console.log(err));\n    closeAllPopups()\n  }\n\n  return (\n    <div className=\"page\">\n      <CurrentUserContext.Provider value={currentUser}>\n        <Header />\n        <Main\n          onEditProfile={() => setIsEditProfilePopupOpen(!isEditProfilePopupOpen)}\n          onAddPlace={() => setIsAddPlacePopupOpen(!isAddPlacePopupOpen)}\n          onEditAvatar={() => setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen)}\n          cards={cards}\n          onCardClick={handleCardClick}\n          onCardLike={handleCardLike}\n          onCardDelete={handleConfirmDeleteCardPopupOpen} />\n\n        <Footer />\n\n        <EditProfilePopup name=\"profileEdit\" isOpen={isEditProfilePopupOpen} onClose={closeAllPopups}\n          onPopupClick={handlePopupClick} onUpdateUser={handleUpdateUser} />\n\n        <AddPlacePopup name=\"cardAdd\" isOpen={isAddPlacePopupOpen} onClose={closeAllPopups}\n          onPopupClick={handlePopupClick} onAddPlace={handleAddPlaceSubmit} />\n\n        <EditAvatarPopups name=\"avatarEdit\" isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups}\n          onPopupClick={handlePopupClick} onUpdateAvatar={handleUpdateAvatar} />\n\n        <PopupWithForm title=\"Вы уверены?\" name=\"confirmation\" buttonText='Да'\n          class={'form__confirmation-button'} onPopupClick={handlePopupClick}\n          isOpen={isConfirmDeletePopupOpen ? 'popup_opened' : ''}\n          onClose={closeAllPopups} onSubmitForm={handleCardDelete} />\n\n        <ImagePopup\n          isOpen={selectedCard.link ? 'popup_opened' : ''}\n          onClose={closeAllPopups}\n          card={selectedCard}\n          onPopupClick={handlePopupClick}\n        />\n      </CurrentUserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}